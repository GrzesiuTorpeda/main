name: Curl-API
on:
  workflow_dispatch:
jobs:
  Curl-Download:
    runs-on: self-hosted
    permissions:
      issues: read
    steps:
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
              curl --request GET \
              --url "https://api.github.com/repos/octocat/Spoon-Knife/issues" \
              --header "Accept: application/vnd.github+json" \
              --header "Authorization: Bearer $GH_TOKEN"
  Curl-Workflows-Content:
    runs-on: self-hosted
    needs: Curl-Download
    permissions:
      issues: read
    steps:
      - env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
             curl --request GET --url "https://api.github.com/repos/GrzesiuTorpeda/main/contents/.github/workflows"

  Python-File-Create:
     runs-on: self-hosted
     needs: Curl-Workflows-Content
     steps:
       - run: |
             curl -i https://api.github.com/repos/GrzesiuTorpeda/main/contents/.github/workflows -o /home/ubuntu/workflow_files.json
             sudo sh -c 'cat << EOF > /home/ubuntu/python.py
             import json
             import mysql.connector
             import subprocess

             # Funkcja do pobierania listy plików z GitHub API za pomocą curl
             def get_workflow_files():
                 # Wykonaj żądanie GET do GitHub API
                 command = "curl -H "Accept:application/vnd.github.v3+json" https://api.github.com/repos/GrzesiuTorpeda/main/contents/main/.github/workflows/"
                 result = subprocess.run(command, shell=True, capture_output=True, text=True)
                 data = json.loads(result.stdout)
                 return [file["workflow_files.json"] for file in data if file["workflow_files.json"].endswith(".yml")]
             
             # Połączenie z bazą danych MySQL
             mydb = mysql.connector.connect(
                 host="localhost",
                 user="root",
                 password="ubuntu",
                 database="workflowjobs"
             )
             mycursor = mydb.cursor()
             
             # Pobierz listę nazw plików .yml z GitHub API
             workflow_files = get_workflow_files()
             
             # Wstaw nazwy plików do tabeli w bazie danych MySQL
             for filename in workflow_files:
                 sql = "INSERT INTO workflow_files (filename) VALUES (%s)"
                 val = (filename)
                 mycursor.execute(sql, val)
                 mydb.commit()

             print("Nazwy plików zostały dodane do tabeli w bazie danych.")
             EOF'
             sudo python3 /home/ubuntu/python.py

     
